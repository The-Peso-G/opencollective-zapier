version: 2

aliases:
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      name: Restore npm cache
      keys:
        - npm-cache-{{ checksum "package.json" }}
        - npm-cache-

  persist_npm_cache: &persist_npm_cache
    save_cache:
      name: Persist npm cache
      key: npm-cache-{{ checksum "package.json" }}
      paths:
        - ../.npm

jobs:
  lint:
    docker:
      - image: circleci/node:11.8.0
    environment:
      NODE_ENV: circleci
    steps:
      - checkout
      - <<: *restore_npm_cache
      - run: npm ci
      - <<: *persist_npm_cache
      - run: npm run test:code-style

  zapier-validate:
    docker:
      - image: circleci/node:11.8.0
    environment:
      NODE_ENV: circleci
    steps:
      - checkout
      - <<: *restore_npm_cache
      - run: npm ci
      - <<: *persist_npm_cache
      - run: npm run zapier:validate

  zapier-test:
    docker:
      - image: circleci/node:11.8.0
      - image: circleci/postgres:9.6.8-alpine-postgis-ram
      - image: circleci/redis
      - image: memcached
    environment:
      NODE_ENV: circleci
      E2E_TEST: 1 # E2E_TEST will be checked by the API to tweak its behavior in CIRCLECI environment
    steps:
      - run: sudo apt -y update
      - run: sudo apt -y install postgresql-client
      - checkout
      - run: ./scripts/setup_circleci_checkout_api.sh
      - restore_cache:
          keys:
            - npm-api-cache-{{ checksum "~/api/package.json" }}
            - npm-api-cache-
      - run: cd ~/api && npm ci
      - save_cache:
          key: npm-api-cache-{{ checksum "~/api/package.json" }}
          paths:
            - ../.npm
      - run: cd ~/api && npm run build
      - run: cd ~
      - <<: *restore_npm_cache
      - run: npm ci
      - <<: *persist_npm_cache
      - run: ./scripts/setup_circleci_db.sh
      - run: ./scripts/run_circleci_tests.sh

workflows:
  version: 2
  lint-build-test:
    jobs:
      - lint
      - zapier-validate
      - zapier-test: { requires: [zapier-validate] }
